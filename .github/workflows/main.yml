name: Create Repositories

on:
  push:
    branches:
      - main

jobs:
  create-repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: List Files
        run: ls repos_to_create/*.json

      - name: Process Files and Create Repos
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
        
          for file in repos_to_create/*.json; do
            repo_name=$(jq -r '.repository' "$file")
            iac_type=$(jq -r '.IaC' "$file")  # Obtén el valor de "IaC" del archivo JSON
            echo $repo_name
            echo $iac_type
            
            # Verifica si el repositorio ya existe
            repo_check=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GH_TOKEN" https://api.github.com/repos/go-pos/"$repo_name")
            echo $repo_check
            if [ "$repo_check" == "200" ]; then
              echo "El repositorio $repo_name ya existe. No se realizará ninguna acción."
            else
              # Crea el repositorio en la organización
              curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/orgs/go-pos/repos \
                -d '{"name":"'"$repo_name"'","description":"This is your first repository","homepage":"https://github.com","private":true,"has_issues":true,"has_projects":true,"has_wiki":true}'
              echo "Repositorio $repo_name creado con éxito y estructura base añadida."
            fi
            

            git clone https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com/go-pos/"$repo_name".git
            cd "$repo_name"

            if [ "$iac_type" == "CDK" ]; then
              cp ../templates/cdk.yml .
            elif [ "$iac_type" == "terraform" ]; then
              cp ../templates/terraform.yml .
            else
              echo "Tipo de IaC no reconocido: $iac_type. No se agrega ningún archivo."
            fi

            git add .
            git commit -m "Añadir archivo correspondiente según el tipo de IaC"
            git push origin main
          done          
